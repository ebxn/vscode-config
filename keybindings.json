// Place your key bindings in this file to override the defaults
[
// panels
{ "key": "ctrl+k ctrl+d",           "command": "workbench.view.debug" },
{ "key": "ctrl+k ctrl+e",           "command": "workbench.view.explorer" },
{ "key": "ctrl+k ctrl+g",           "command": "workbench.view.scm" },
{ "key": "ctrl+k ctrl+x",           "command": "workbench.extensions.action.showInstalledExtensions" },
{ "key": "ctrl+k ctrl+b",           "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+e",                  "command": "workbench.action.focusActiveEditorGroup" },
{ "key": "ctrl+t",                  "command": "workbench.action.terminal.toggleTerminal" },
{ "key": "ctrl+k ctrl+p",           "command": "workbench.actions.view.problems" },


// hide toaster notifications
{ "key": "escape",                  "command": "notifications.hideToasts",
                                       "when": "notificationToastsVisible" } ,

// comments
{ "key": "ctrl+[period]",           "command": "editor.action.commentLine",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+shift+[period]",     "command": "editor.action.blockComment",
                                       "when": "editorTextFocus" },

// file explorer
{ "key": "ctrl+d",                  "command": "duplicate.execute",
                                       "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus" },
{ "key": "ctrl+n",                  "command": "explorer.newFile",
                                       "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus" },
{ "key": "shift+ctrl+n",            "command": "explorer.newFolder",
                                       "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus" },

// terminal panel splitting
{ "key": "alt+n",                   "command": "workbench.action.terminal.split",
                                       "when": "terminalFocus" },
{ "key": "alt+l",                   "command": "workbench.action.terminal.focusNextPane",
                                       "when": "terminalFocus" },
{ "key": "alt+h",                   "command": "workbench.action.terminal.focusPreviousPane",
                                       "when": "terminalFocus" },
{ "key": "alt+w",                   "command": "workbench.action.terminal.kill",
                                       "when": "terminalFocus" },

// line manipulation
{ "key": "ctrl+shift+d",            "command": "editor.action.copyLinesDownAction",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+j",                  "command": "editor.action.joinLines",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+shift+backspace",    "command": "deleteAllLeft",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+shift+delete",       "command": "deleteAllRight",
                                       "when": "editorTextFocus" },
{ "key": "alt+left",                "command": "cursorHome",
                                       "when": "textInputFocus" },
{ "key": "alt+right",               "command": "cursorEnd",
                                       "when": "textInputFocus" },

// multi-cursor
{ "key": "ctrl+backspace",          "command": "editor.action.moveSelectionToPreviousFindMatch",
                                       "when": "editorFocus && editorHasMultipleSelections" },
{ "key": "ctrl+k ctrl+d",           "command": "editor.action.moveSelectionToNextFindMatch",
                                       "when": "editorFocus && editorHasMultipleSelections" },
{ "key": "ctrl+right",              "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                       "when": "editorFocus && editorHasSelection" },

// split panels
{ "key": "alt+w",                   "command": "workbench.action.joinAllGroups",
                                       "when": "editorFocus" },
{ "key": "alt+n",                   "command": "workbench.action.splitEditor",
                                       "when": "editorFocus" },
{ "key": "alt+l",                   "command": "workbench.action.navigateRight",
                                       "when": "editorFocus" },
{ "key": "alt+h",                   "command": "workbench.action.navigateLeft",
                                       "when": "editorFocus" },
{ "key": "alt+=",                   "command": "workbench.action.increaseViewSize",
                                       "when": "editorFocus" },
{ "key": "alt+-",                   "command": "workbench.action.decreaseViewSize",
                                       "when": "editorFocus" },

// emmet
{ "key": "ctrl+m ctrl+i",           "command": "editor.emmet.action.balanceIn",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+m ctrl+o",           "command": "editor.emmet.action.balanceOut",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+m ctrl+w",           "command": "editor.emmet.action.wrapWithAbbreviation",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+m ctrl+m",           "command": "editor.emmet.action.matchTag",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+m ctrl+e",            "command": "editor.action.smartSelect.expand",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+m ctrl+r",           "command": "editor.emmet.action.updateTag",
                                       "when": "editorTextFocus" },
{ "key": "ctrl+m ctrl+backspace",   "command": "editor.emmet.action.removeTag",
                                       "when": "editorTextFocus" },

// project switching
{ "key": "ctrl+;",                  "command": "workbench.action.switchWindow" },

// toggle big/small font size
{ "key": "ctrl+k ctrl+k",           "command": "toggle",
                                       "when": "editorTextFocus",
                                       "args": {
                                           "id": "fontSize",
                                           "value": [
                                               { "editor.fontSize": 16, "editor.lineHeight": 40 },
                                               { "editor.fontSize": 13, "editor.lineHeight": 0 }
                                           ]
                                       } },

// intellisense
{ "key": "ctrl+r",                  "command": "workbench.action.gotoSymbol" },
{ "key": "ctrl+shift+r",            "command": "workbench.action.showAllSymbols" },
{ "key": "ctrl+k ctrl+enter",       "command": "editor.action.goToDeclaration",
                                       "when": "editorTextFocus" },

// jest
{ "key": "ctrl+k ctrl+r",           "command": "better-jest.run" },
{ "key": "ctrl+k ctrl+f",           "command": "better-jest.run-file" }
]
